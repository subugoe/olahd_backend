version: '3.5'
services:

  olahds_backend:
    ports:
      - "8080:8080"
    environment:
      - OLA_HD_MIN_MEMORY=6G
      - OLA_HD_MAX_MEMORY=6G
      - OLA_HD_EXTERNAL_PORT=8080
      - OLA_HD_PORT=8080
    volumes:
      - ./src/main/resources/:/config/

  olahds_indexer:
    volumes:
      - ./cfg/local/app.env:/etc/env/app.env
      - ./cfg/local/app-static.env:/etc/env/app-static.env
      - ./cfg/local/commons.env:/etc/env/commons.env
      - ./cfg/local/commons-static.env:/etc/env/commons-static.env
      - ./cfg/local/iiif.env:/etc/env/iiif.env

  olahds_web_notifier:
    volumes:
      - ./cfg/local/app.env:/etc/env/app.env
      - ./cfg/local/app-static.env:/etc/env/app-static.env
      - ./cfg/local/commons.env:/etc/env/commons.env
      - ./cfg/local/commons-static.env:/etc/env/commons-static.env
      - ./cfg/local/iiif.env:/etc/env/iiif.env
    networks:
      olahd:
        aliases:
          - web

  olahds_mongo:
    image: mongo:4.0.10
    container_name: olahds_mongo
    command: mongod
    ports:
      - "27017:27017"
    env_file: .env
    volumes:
      - ~/olahd-data/mongodb-data-local:/data/db
      - ./docker/mongodb/config/mongodb-setup.js:/setup/mongodb-setup.js
    networks:
      olahd:
        aliases:
          - mongo
    environment:
      # provide your credentials here
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: testtest
      MONGO_INITDB_DATABASE: admin


  olahds_redis:
    image: redis:6-alpine
    command: redis-server --appendonly yes
    container_name: olahds_redis
    restart: on-failure
    ports:
      - "8442:6379"
    volumes:
      - redisdata:/data/
    networks:
      olahd:
        aliases:
          - redis

  olahds_search:
    build:
      context: ./docker/search
    container_name: olahds_search
    volumes:
      - ./docker/search/config/stopwords.txt:/usr/share/elasticsearch/config/stopwords.txt:ro
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9200/_cat/health"]
      interval: 30s
      timeout: 60s
      retries: 300
    networks:
      olahd:
        aliases:
          - es
          - search

  olahds_s3:
    container_name: olahds_s3
    image: quay.io/minio/minio
    entrypoint: sh
    command: -c 'mkdir -p /data/olahds && minio server /data --console-address ":9001"'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3_data:/data
    networks:
      olahd:
        aliases:
          - olahds_s3
          - s3

  go-iiif:
    image: ghcr.io/subugoe/go-iiif:develop
    command: /go/iiif-server -server-uri http://0.0.0.0:8080 -config-source file:///etc/iiif-server
    working_dir: /go
    volumes:
      - ./cfg/go-iiif/config.json:/etc/iiif-server/config.json
      - ./cfg/go-iiif/instructions.json:/etc/iiif-server/instructions.json
    ports:
      - "8081:8080"
    networks:
      olahd:
        aliases:
          - image-server
          - images

volumes:
  redisdata:
  # TODO has to be chanched to container external storage
  es_data:
  s3_data:
